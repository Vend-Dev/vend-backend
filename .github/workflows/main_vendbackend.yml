name: Build and deploy Node.js app to Azure Web App - vendbackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_587C721C8C9648228F97A3896659530C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_31C3C56F4CB848BAB5E05568B31A78F2 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_25B2DFA7D72E4666AEE704E670109647 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "vendbackend"
          slot-name: "Production"
          package: .
          env: |
            jwt_secre=${{ secrets.JWT_SECRET }}
            smpt_host=${{ secrets.SMPT_HOST }}
            smpt_port=${{ secrets.SMPT_PORT }}
            smpt_service=${{ secrets.SMPT_SERVICE }}
            smpt_mail=${{ secrets.SMPT_MAIL }}
            smpt_password=${{ secrets.SMPT_PASSWORD }}
            smpt=${{ secrets.SMPT }}
            db_host=${{ secrets.DB_HOST }}
            db_port=${{ secrets.DB_PORT }}
            db_user=${{ secrets.DB_USER }}
            db_password=${{ secrets.DB_PASSWORD }}
            db_database=${{ secrets.DB_DATABASE }}
            client_rul=${{ secrets.CLIENT_URL }}
            cloudinary_name=${{ secrets.CLOUDINARY_NAME }}
            cloudinary_apikey=${{ secrets.CLOUDINARY_APIKEY }}
            cloudinary_secret=${{ secrets.CLOUDINARY_SECRET }}
            paystack=${{ secrets.PAYSTACK }}
            port=${{secretes.PORT}}
