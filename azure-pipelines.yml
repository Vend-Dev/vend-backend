# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "094e0f21-284c-49d2-9d75-bf51cc625d27"

  # Web app name
  webAppName: "vendbackend"

  # Environment name
  environmentName: "vendbackend"

  # Agent VM image name
  vmImageName: "Default"

  group: "credentials"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: Default

        steps:
          - script: |
              echo "port=$(port)" >> .env
              echo "jwt_secret=$(jwt_secret)" >> .env
              echo "smtp_service=$(smtp_service)" >> .env
              echo "smtp_host=$(smtp_host)" >> .env
              echo "smtp_port=$(smtp_port)" >> .env
              echo "smtp_mail=$(smtp_mail)" >> .env
              echo "smtp_password=$(smtp_password)" >> .env
              echo "cloudinary_name=$(cloudinary_name)" >> .env
              echo "cloudinary_apikey=$(cloudinary_apikey)" >> .env
              echo "cloudinary_secret=$(cloudinary_secret)" >> .env
              echo "db_host=$(db_host)" >> .env
              echo "db_port=$(db_port)" >> .env
              echo "db_password=$(db_password)" >> .env
              echo "db_user=$(db_user)" >> .env
              echo "db_database=$(db_database)" >> .env
              echo "paystack=$(paystack)" >> .env
            displayName: "Create .env file"
          - task: NodeTool@0
            inputs:
              versionSpec: "20.x"
            displayName: "Install Node.js"

          - script: |
              npm install
              npm run build --if-present
              npm run test --if-present
            displayName: "npm install, build and test"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          name: Default
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "Azure Web App Deploy: vendbackend"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(webAppName)
                    runtimeStack: "NODE|20.11"
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: "npm run start"
